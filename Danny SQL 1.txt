---Danny's Diner SQL Case study----

1. What is the total amount each customer spent at the restaurant?

select s.customer_id, sum(m.price) from 
dannys_diner.sales as s JOIN 
dannys_diner.menu as m ON
s.product_id=m.product_id
group by s.customer_id
order by s.customer_id

2. How many days has each customer visited the restaurant?

select s.customer_id, count(DISTINCT s.order_date) from 
dannys_diner.sales as s JOIN 
dannys_diner.menu as m ON
s.product_id=m.product_id
group by s.customer_id
order by s.customer_id

3. What was the first item from the menu purchased by each customer?
WITH items_purchased_cte AS
(
select s.customer_id,m.product_name, dense_rank() over(partition by s.customer_id order by s.order_date) as rank_item
from
dannys_diner.sales as s JOIN 
dannys_diner.menu as m ON
s.product_id=m.product_id
)
select customer_id,product_name from items_purchased_cte where rank_item = 1 
group by  customer_id,product_name

4.What is the most purchased item on the menu and how many times was it purchased by all customers?

select m.product_name, count(s.product_id)
from
dannys_diner.sales as s JOIN 
dannys_diner.menu as m ON
s.product_id=m.product_id
group by m.product_name
order by count(s.product_id) desc limit 1

5.Which item was the most popular for each customer?

WITH cte_popularitem AS
(
select s.customer_id,m.product_name, count(m.product_name) , dense_rank()over(partition by s.customer_id order by count(m.product_name) desc ) as rankitem
from
dannys_diner.sales as s JOIN 
dannys_diner.menu as m ON
s.product_id=m.product_id
 group by m.product_name,s.customer_id
  )
select customer_id,product_name, count(product_name) from cte_popularitem
where rankitem = 1 
group by customer_id,product_name ;

6.-- Which item was purchased first by the customer after they became a member?

WITH order_cte
AS
(
select s.customer_id,m.product_name, s.order_date, dense_rank() over(partition by s.customer_id order by s.order_date) as rank_item
from
dannys_diner.sales as s JOIN 
dannys_diner.menu as m ON
s.product_id=m.product_id
JOIN
dannys_diner.members as mem
ON s.customer_id = mem.customer_id
  where s.order_date >= mem.join_date
)
select customer_id,product_name from  order_cte
where rank_item = 1 
group by  customer_id,product_name

7.-- Which item was purchased just before the customer became a member?

WITH order_cte
AS
(
select s.customer_id,m.product_name, s.order_date,mem.join_date, dense_rank() over(partition by s.customer_id order by s.order_date desc) as rank_item
from
dannys_diner.sales as s JOIN 
dannys_diner.menu as m ON
s.product_id=m.product_id
JOIN
dannys_diner.members as mem
ON s.customer_id = mem.customer_id
  where s.order_date < mem.join_date
)
select customer_id,product_name from  order_cte
where rank_item = 1 
group by  customer_id,product_name

-- 8. What is the total items and amount spent for each member before they became a member?

select mem.customer_id,count(DISTINCT s.product_id), sum(m.price)
from
dannys_diner.sales as s JOIN 
dannys_diner.menu as m ON
s.product_id=m.product_id
JOIN
dannys_diner.members as mem
ON s.customer_id = mem.customer_id
  where s.order_date < mem.join_date
  GROUP BY mem.customer_id

-- 9.  If each $1 spent equates to 10 points and sushi has a 2x points multiplier - how many points would each customer have?

WITH order_cte AS
(
select s.customer_id,
CASE when m.product_name ='sushi' then
 m.price * 20
ELSE  
 m.price*10
END as pricedetail
from 
dannys_diner.sales as s JOIN 
dannys_diner.menu as m ON
s.product_id=m.product_id
order by s.customer_id
)
select customer_id, sum(pricedetail) from order_cte
group by customer_id
order by customer_id


----Danny SQL2-----
1.How many pizzas were ordered?
SELECT
	COUNT(Cust.pizza_id) AS orders
FROM pizza_runner.customer_orders as Cust
2.How many unique customer orders were made?
SELECT
	COUNT(DISTINCT(Cust.order_id)) AS orders
FROM pizza_runner.customer_orders as Cust